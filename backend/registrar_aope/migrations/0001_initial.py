# Generated by Django 5.1.2 on 2025-10-19 07:02

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('registrar_logbook', '0004_alter_registrarpracticeentry_options_and_more'),
        ('section_c', '0008_supervisionentry_is_cultural_supervision_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RegistrarProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aope_area', models.CharField(choices=[('CLINICAL', 'Clinical Psychology'), ('COUNSELLING', 'Counselling Psychology'), ('EDUCATIONAL', 'Educational Psychology'), ('FORENSIC', 'Forensic Psychology'), ('HEALTH', 'Health Psychology'), ('NEUROPSYCHOLOGY', 'Neuropsychology'), ('ORGANISATIONAL', 'Organisational Psychology'), ('SPORT', 'Sport Psychology'), ('COMMUNITY', 'Community Psychology')], max_length=20)),
                ('program_track', models.CharField(choices=[('TRACK_1', 'Track 1 (2 years, 2000 hours)'), ('TRACK_2', 'Track 2 (2 years, 2000 hours)'), ('TRACK_3', 'Track 3 (2 years, 2000 hours)')], max_length=10)),
                ('enrollment_date', models.DateField()),
                ('expected_completion_date', models.DateField()),
                ('fte_fraction', models.FloatField(default=1.0, validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(1.0)])),
                ('direct_contact_requirement', models.IntegerField(default=176)),
                ('board_variation_enabled', models.BooleanField(default=False)),
                ('board_variation_doc', models.FileField(blank=True, null=True, upload_to='registrar/variations/')),
                ('total_weeks_required', models.IntegerField(default=104)),
                ('supervision_hours_required', models.IntegerField(default=200)),
                ('cpd_hours_required', models.IntegerField(default=60)),
                ('status', models.CharField(choices=[('ENROLLED', 'Enrolled'), ('ACTIVE', 'Active'), ('ON_LEAVE', 'On Leave'), ('COMPLETED', 'Completed'), ('WITHDRAWN', 'Withdrawn')], default='ENROLLED', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('principal_supervisor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='principal_registrars', to='registrar_logbook.supervisorprofile')),
                ('secondary_supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='secondary_registrars', to='registrar_logbook.supervisorprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='registrar_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registrar Profile',
                'verbose_name_plural': 'Registrar Profiles',
            },
        ),
        migrations.CreateModel(
            name='ProgressReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('MIDPOINT', 'Midpoint Report'), ('FINAL', 'Final Report')], max_length=10)),
                ('competency_ratings', models.JSONField(default=dict, help_text='Competency ratings: {C1: M3, C2: M2, ...}')),
                ('supervisor_feedback', models.TextField()),
                ('action_plan', models.TextField(blank=True, help_text='Action plan for midpoint reports')),
                ('registrar_signature', models.TextField(blank=True)),
                ('supervisor_signature', models.TextField(blank=True)),
                ('signed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('registrar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_reports', to='registrar_aope.registrarprofile')),
            ],
            options={
                'verbose_name': 'Progress Report',
                'verbose_name_plural': 'Progress Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PracticeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('duration_hours', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('practice_type', models.CharField(choices=[('DIRECT_CLIENT', 'Direct Client Contact'), ('CLIENT_RELATED', 'Client-Related Activity'), ('NONCLINICAL_PROFESSIONAL', 'Non-clinical Professional Activity')], max_length=25)),
                ('aope_alignment', models.BooleanField(default=True, help_text='Activity aligns with AoPE area')),
                ('activity_description', models.TextField()),
                ('setting', models.CharField(help_text='Setting/context of activity', max_length=200)),
                ('competencies', models.JSONField(default=list, help_text='List of competencies addressed (C1-C8)')),
                ('reflection_text', models.TextField(blank=True, help_text='Required for direct client contact')),
                ('supervisor_reviewed', models.BooleanField(default=False)),
                ('supervisor_feedback', models.TextField(blank=True)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='registrar_logbook.supervisorprofile')),
                ('registrar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practice_logs', to='registrar_aope.registrarprofile')),
            ],
            options={
                'verbose_name': 'Practice Log Entry',
                'verbose_name_plural': 'Practice Log Entries',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ObservationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_date', models.DateField()),
                ('method', models.CharField(choices=[('LIVE', 'Live Observation'), ('RECORDED', 'Recorded Observation')], max_length=10)),
                ('consent_confirmed', models.BooleanField(default=False)),
                ('privacy_confirmed', models.BooleanField(default=False)),
                ('feedback_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supervision_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observation_records', to='section_c.supervisionentry')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registrar_logbook.supervisorprofile')),
                ('registrar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='observation_records', to='registrar_aope.registrarprofile')),
            ],
            options={
                'verbose_name': 'Observation Record',
                'verbose_name_plural': 'Observation Records',
                'ordering': ['-observation_date'],
            },
        ),
        migrations.CreateModel(
            name='LeaveRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('PARENTAL', 'Parental Leave'), ('SICK', 'Sick Leave'), ('CARER', 'Carer Leave'), ('LIFESTYLE', 'Lifestyle Leave'), ('OTHER', 'Other')], max_length=15)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('approved_by_supervisor', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='registrar_logbook.supervisorprofile')),
                ('registrar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leave_records', to='registrar_aope.registrarprofile')),
            ],
            options={
                'verbose_name': 'Leave Record',
                'verbose_name_plural': 'Leave Records',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='EndorsementApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_date', models.DateTimeField(blank=True, null=True)),
                ('completion_date', models.DateField(blank=True, null=True)),
                ('total_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('supervision_summary', models.JSONField(default=dict, help_text='Supervision hours breakdown')),
                ('cpd_summary', models.JSONField(default=dict, help_text='CPD hours breakdown')),
                ('competency_attestation', models.JSONField(default=dict, help_text='Competency attainment summary')),
                ('supervisor_declaration', models.TextField(blank=True)),
                ('registrar_declaration', models.TextField(blank=True)),
                ('exported_pdf_path', models.CharField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('SUBMITTED', 'Submitted'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], default='DRAFT', max_length=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('registrar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='endorsement_applications', to='registrar_aope.registrarprofile')),
            ],
            options={
                'verbose_name': 'Endorsement Application',
                'verbose_name_plural': 'Endorsement Applications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CPDActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('provider', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('duration_hours', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('activity_type', models.CharField(choices=[('WORKSHOP', 'Workshop'), ('CONFERENCE', 'Conference'), ('COURSE', 'Course'), ('SUPERVISION', 'Supervision'), ('PEER_CONSULTATION', 'Peer Consultation'), ('RESEARCH', 'Research'), ('OTHER', 'Other')], max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Meets AHPRA active CPD requirements')),
                ('supervisor_set_task', models.TextField(blank=True, help_text='Task to make non-active CPD active')),
                ('aope_alignment', models.BooleanField(default=True, help_text='Activity aligns with AoPE area')),
                ('is_peer_consultation', models.BooleanField(default=False, help_text='Counts toward peer consultation hours')),
                ('learning_objectives', models.TextField(blank=True)),
                ('competencies', models.JSONField(default=list, help_text='List of competencies addressed (C1-C8)')),
                ('reflection', models.TextField(blank=True)),
                ('evidence_file', models.FileField(blank=True, null=True, upload_to='registrar/cpd_evidence/')),
                ('supervisor_approval', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('supervisor_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='registrar_logbook.supervisorprofile')),
                ('registrar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cpd_activities', to='registrar_aope.registrarprofile')),
            ],
            options={
                'verbose_name': 'CPD Activity',
                'verbose_name_plural': 'CPD Activities',
                'ordering': ['-date', '-created_at'],
            },
        ),
    ]
