# Generated by Django 5.1.2 on 2025-10-19 22:25

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0032_add_ahpra_compliance_fields'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('descriptors', models.JSONField(default=dict)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Competencies',
                'ordering': ['order'],
            },
        ),
        migrations.AlterModelOptions(
            name='epa',
            options={'ordering': ['order', 'code']},
        ),
        migrations.AlterModelOptions(
            name='milestone',
            options={'ordering': ['epa__code', 'level']},
        ),
        migrations.AddField(
            model_name='epa',
            name='descriptors',
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name='epa',
            name='order',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='milestone',
            name='label',
            field=models.CharField(default='Novice', max_length=50),
        ),
        migrations.AddField(
            model_name='milestone',
            name='level',
            field=models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)]),
        ),
        migrations.AddField(
            model_name='epa',
            name='competency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='epas', to='api.competency'),
        ),
        migrations.CreateModel(
            name='Rubric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('criteria', models.JSONField(default=list)),
                ('weightings', models.JSONField(default=dict)),
                ('guidance_notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('competency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubrics', to='api.competency')),
                ('epa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubrics', to='api.epa')),
                ('milestone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubrics', to='api.milestone')),
            ],
        ),
        migrations.CreateModel(
            name='RubricScore',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('criterion_id', models.CharField(max_length=50)),
                ('criterion_label', models.CharField(max_length=255)),
                ('selected_level', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rubric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scores', to='api.rubric')),
                ('supervisee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubric_scores', to=settings.AUTH_USER_MODEL)),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_rubric_scores', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RubricSummary',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total_weighted_score', models.FloatField(default=0.0)),
                ('milestone_equivalent', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('summary_comment', models.TextField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('approved', 'Approved')], default='draft', max_length=20)),
                ('locked', models.BooleanField(default=False)),
                ('evidence_links', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('epa', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubric_summaries', to='api.epa')),
                ('rubric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='summaries', to='api.rubric')),
                ('supervisee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rubric_summaries', to=settings.AUTH_USER_MODEL)),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_rubric_summaries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='rubric',
            index=models.Index(fields=['epa', 'is_active'], name='api_rubric_epa_id_a37b69_idx'),
        ),
        migrations.AddIndex(
            model_name='rubric',
            index=models.Index(fields=['competency', 'is_active'], name='api_rubric_compete_3bd61c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rubric',
            unique_together={('epa', 'milestone', 'competency')},
        ),
        migrations.AddIndex(
            model_name='rubricscore',
            index=models.Index(fields=['supervisee', 'supervisor', '-created_at'], name='api_rubrics_supervi_6c479f_idx'),
        ),
        migrations.AddIndex(
            model_name='rubricscore',
            index=models.Index(fields=['rubric', 'criterion_id'], name='api_rubrics_rubric__49c0f0_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rubricscore',
            unique_together={('rubric', 'supervisee', 'supervisor', 'criterion_id')},
        ),
        migrations.AddIndex(
            model_name='rubricsummary',
            index=models.Index(fields=['supervisee', 'status', '-created_at'], name='api_rubrics_supervi_b47741_idx'),
        ),
        migrations.AddIndex(
            model_name='rubricsummary',
            index=models.Index(fields=['supervisor', '-created_at'], name='api_rubrics_supervi_c120c0_idx'),
        ),
        migrations.AddIndex(
            model_name='rubricsummary',
            index=models.Index(fields=['epa', 'supervisee'], name='api_rubrics_epa_id_0fa80a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rubricsummary',
            unique_together={('epa', 'supervisee', 'supervisor', 'created_at')},
        ),
    ]
