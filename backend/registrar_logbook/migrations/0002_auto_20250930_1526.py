# Generated by Django 5.1.2 on 2025-09-30 05:26

from django.db import migrations, models
import django.db.models.deletion
import json


class Migration(migrations.Migration):

    dependencies = [
        ('registrar_logbook', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL(
            """
            CREATE TABLE IF NOT EXISTS registrar_logbook_registrarprogram (
                id SERIAL PRIMARY KEY,
                user_id INTEGER NOT NULL,
                aope VARCHAR(50) NOT NULL,
                qualification_tier VARCHAR(30) NOT NULL,
                fte_fraction DECIMAL(3,2) DEFAULT 1.0,
                start_date DATE NOT NULL,
                expected_end_date DATE NOT NULL,
                status VARCHAR(30) DEFAULT 'draft',
                targets_practice_hrs INTEGER NOT NULL,
                targets_supervision_hrs INTEGER NOT NULL,
                targets_cpd_hrs INTEGER NOT NULL,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                UNIQUE(user_id, aope, start_date)
            );
            """,
            reverse_sql="DROP TABLE IF EXISTS registrar_logbook_registrarprogram;"
        ),
        migrations.RunSQL(
            """
            CREATE TABLE IF NOT EXISTS registrar_logbook_registrarpracticeentry (
                id SERIAL PRIMARY KEY,
                program_id INTEGER NOT NULL,
                date DATE NOT NULL,
                start_time TIME,
                end_time TIME,
                hours DECIMAL(4,2) NOT NULL,
                is_dcc BOOLEAN DEFAULT FALSE,
                setting VARCHAR(20) DEFAULT 'clinic',
                client_group VARCHAR(20) DEFAULT 'adult',
                description TEXT NOT NULL,
                competency_tags JSONB DEFAULT '[]',
                evidence_files JSONB DEFAULT '{}',
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
            """,
            reverse_sql="DROP TABLE IF EXISTS registrar_logbook_registrarpracticeentry;"
        ),
        migrations.RunSQL(
            """
            CREATE TABLE IF NOT EXISTS registrar_logbook_registrarsupervisionentry (
                id SERIAL PRIMARY KEY,
                program_id INTEGER NOT NULL,
                date DATE NOT NULL,
                duration_minutes INTEGER NOT NULL,
                mode VARCHAR(20) DEFAULT 'in_person',
                type VARCHAR(20) DEFAULT 'individual',
                supervisor_id INTEGER NOT NULL,
                supervisor_category VARCHAR(50) NOT NULL,
                topics TEXT,
                observed BOOLEAN DEFAULT FALSE,
                shorter_than_60min BOOLEAN DEFAULT FALSE,
                notes TEXT,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
            """,
            reverse_sql="DROP TABLE IF EXISTS registrar_logbook_registrarsupervisionentry;"
        ),
        migrations.RunSQL(
            """
            CREATE TABLE IF NOT EXISTS registrar_logbook_registrarcpdentry (
                id SERIAL PRIMARY KEY,
                program_id INTEGER NOT NULL,
                date DATE NOT NULL,
                provider VARCHAR(255) NOT NULL,
                title VARCHAR(255) NOT NULL,
                hours DECIMAL(4,2) NOT NULL,
                is_active_cpd BOOLEAN DEFAULT TRUE,
                learning_goal TEXT,
                reflection TEXT,
                evidence_files JSONB DEFAULT '{}',
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
            """,
            reverse_sql="DROP TABLE IF EXISTS registrar_logbook_registrarcpdentry;"
        ),
        migrations.RunSQL(
            """
            CREATE TABLE IF NOT EXISTS registrar_logbook_supervisorprofile (
                id SERIAL PRIMARY KEY,
                user_id INTEGER NOT NULL UNIQUE,
                is_BAS BOOLEAN DEFAULT FALSE,
                aope_endorsements JSONB DEFAULT '[]',
                years_endorsed JSONB DEFAULT '{}',
                is_registrar_principal_approved BOOLEAN DEFAULT FALSE,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
            """,
            reverse_sql="DROP TABLE IF EXISTS registrar_logbook_supervisorprofile;"
        ),
        migrations.RunSQL(
            """
            CREATE TABLE IF NOT EXISTS registrar_logbook_competencyframework (
                id SERIAL PRIMARY KEY,
                aope VARCHAR(50) NOT NULL,
                category_code VARCHAR(20) NOT NULL,
                label VARCHAR(255) NOT NULL,
                description TEXT,
                UNIQUE(aope, category_code)
            );
            """,
            reverse_sql="DROP TABLE IF EXISTS registrar_logbook_competencyframework;"
        ),
        migrations.RunSQL(
            """
            CREATE TABLE IF NOT EXISTS registrar_logbook_progresssnapshot (
                id SERIAL PRIMARY KEY,
                program_id INTEGER NOT NULL,
                type VARCHAR(20) NOT NULL,
                snapshot_json JSONB NOT NULL,
                created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
            );
            """,
            reverse_sql="DROP TABLE IF EXISTS registrar_logbook_progresssnapshot;"
        ),
        migrations.RunSQL(
            """
            CREATE TABLE IF NOT EXISTS registrar_logbook_auditlog (
                id SERIAL PRIMARY KEY,
                actor_id INTEGER NOT NULL,
                program_id INTEGER NOT NULL,
                entity_type VARCHAR(30) NOT NULL,
                entity_id INTEGER,
                action VARCHAR(20) NOT NULL,
                timestamp TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
                metadata JSONB DEFAULT '{}'
            );
            """,
            reverse_sql="DROP TABLE IF EXISTS registrar_logbook_auditlog;"
        ),
    ]
